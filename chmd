#!/usr/bin/env ruby
# fronze_string_literal: true

require 'English'

`git rev-parse --show-toplevel >/dev/null 2>/dev/null`
unless $CHILD_STATUS.success?
  warn 'Error: outside git repo, or git is not installed.'
  exit 1
end
remote_urls = `git remote get-url origin`.split("\n").grep(/github\.com/)
unless remote_urls.size == 1
  warn 'Error: remote origin is not on github.com.'
  exit 1
end

remote_url = remote_urls[0].sub(/.git$/, '')
ref = nil
tags = {}
logs = `git log --pretty=format:"%H	%ad	%s	%D" \
        --date=format:'%Y-%m-%d %H:%M:%S'`.split "\n"
logs.map { _1.split "\t" }.each do |c|
  ref = c[-1] unless c[3].nil?
  tags[ref] = tags[ref].nil? ? [c[0, 3]] : tags[ref] + [c[0, 3]]
end
puts '# Changelog'
tags.each do |k, v|
  _, ts, = v[0].map(&:strip)
  next unless k =~ /tag: /

  tag_name = Regexp.last_match.post_match.strip.split(',')[0]
  prev_tag_name = (
       tags.keys[tags.keys.index(k) + 1] ||= tags.values[-1][-1][0]
     ).sub('tag: ', '')
  puts "\n## [#{tag_name}](#{remote_url}/releases/tag/#{tag_name}) " \
       + "- #{ts} ([compare](#{remote_url}/compare/#{prev_tag_name}...#{tag_name}))"
  puts
  v.each do |hash, _, msg|
    next if msg =~ /changelog/i

    puts <<~A
      - [#{hash}](#{remote_url}/commit/#{hash})
        - #{msg}
    A
  end
end
