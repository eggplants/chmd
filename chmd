#!/usr/bin/env ruby
# fronze_string_literal: true

require 'English'

`git rev-parse --show-toplevel >/dev/null 2>/dev/null`
unless $CHILD_STATUS.success?
  warn 'Error: outside git repo, or git is not installed.'
  exit 1
end
ref = nil
tags = {}
logs = `git log --pretty=format:"%H	%ad	%s	%D"`.split "\n"
logs.map { _1.split "\t" }.each do |c|
  ref = c[-1] unless c[3].nil?
  tags[ref] = tags[ref].nil? ? [c[0, 3]] : tags[ref] + [c[0, 3]]
end
puts "# Changelog\n\n"
tags.each do |k, v|
  _, ts, = v[0].map(&:strip)
  next unless k =~ /tag: /

  tag_name = Regexp.last_match.post_match.strip.split(',')[0]
  prev_tag_name = (
       tags.keys[tags.keys.index(k) + 1] ||= tags.values[-1][-1][0]
     ).sub('tag: ', '')
  puts "## version [#{tag_name}](../../releases/tag/#{tag_name}) " \
       + "in #{ts} ([compare](../../compare/#{prev_tag_name}...#{tag_name}))"
  puts
  v.each do |hash, _, msg|
    puts <<~A
      - [#{hash}](../../commit/#{hash})
        - #{msg}
    A
  end
  puts
end
